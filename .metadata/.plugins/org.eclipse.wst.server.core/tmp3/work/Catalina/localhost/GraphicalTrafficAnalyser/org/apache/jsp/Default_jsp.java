/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2015-10-01 13:10:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Default_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("\tfont: 10px sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".axis path, .axis line {\r\n");
      out.write("\tfill: none;\r\n");
      out.write("\tstroke: #000;\r\n");
      out.write("\tshape-rendering: crispEdges;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".overlay {\r\n");
      out.write("\tfill: none;\r\n");
      out.write("\tpointer-events: all;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line {\r\n");
      out.write("\tfill: none;\r\n");
      out.write("\tstroke: steelblue;\r\n");
      out.write("\tstroke-width: 1.5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".focus circle {\r\n");
      out.write("\tfill: none;\r\n");
      out.write("\tstroke: steelblue;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar request;\r\n");
      out.write("\tfunction sendInfo() {\r\n");
      out.write("\t\t//var v=document.vinform.t1.value;  \r\n");
      out.write("\t\tconsole.log(\"reached\");\r\n");
      out.write("\t\tvar url = \"DataServlet\";\r\n");
      out.write("\r\n");
      out.write("\t\tif (window.XMLHttpRequest) {\r\n");
      out.write("\t\t\trequest = new XMLHttpRequest();\r\n");
      out.write("\t\t} else if (window.ActiveXObject) {\r\n");
      out.write("\t\t\trequest = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\ttry {\r\n");
      out.write("\t\t\trequest.onreadystatechange = function() {\r\n");
      out.write("\t\t\t\tif (request.readyState == 4) {\r\n");
      out.write("\t\t\t\t\tvar val = request.responseText;\r\n");
      out.write("\t\t\t\t\t//document.getElementById('amit').innerHTML=val;  \r\n");
      out.write("\t\t\t\t\tif (val != null)\r\n");
      out.write("\t\t\t\t\t\tshowGraph(val);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\trequest.open(\"GET\", url, true);\r\n");
      out.write("\t\t\trequest.send();\r\n");
      out.write("\t\t} catch (e) {\r\n");
      out.write("\t\t\talert(\"Unable to connect to server\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction showGraph(val1) {\r\n");
      out.write("\t\t//console.log(val1);\r\n");
      out.write("\t\tJSON.parse('{\"result\":true,\"count\":1}');\r\n");
      out.write("\t\tvar val = JSON.parse('[' + val1 + ']');\r\n");
      out.write("\t\t//console.log(val);\t  \r\n");
      out.write("\t\tvar dataset1 = val;\r\n");
      out.write("\r\n");
      out.write("\t\tvar margin = {\r\n");
      out.write("\t\t\ttop : 20,\r\n");
      out.write("\t\t\tright : 0,\r\n");
      out.write("\t\t\tbottom : 30,\r\n");
      out.write("\t\t\tleft : 40\r\n");
      out.write("\t\t}, width = 1900 - margin.left - margin.right, height = 900 - margin.top\r\n");
      out.write("\t\t\t\t- margin.bottom;\r\n");
      out.write("\r\n");
      out.write("\t\t//var parseDate = d3.time.format(\"%Y%m%d\").parse;\r\n");
      out.write("\t\tvar x = d3.scale.ordinal().rangeRoundBands([ 0, width ], .2);\r\n");
      out.write("\t\tvar y = d3.scale.linear().rangeRound([ height, 0 ]);\r\n");
      out.write("\t\tvar color = d3.scale.category10();\r\n");
      out.write("\r\n");
      out.write("\t\tvar xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\r\n");
      out.write("\r\n");
      out.write("\t\tvar yAxis = d3.svg.axis().scale(y).orient(\"left\");\r\n");
      out.write("\r\n");
      out.write("\t\tvar line = d3.svg.line().interpolate(\"basis\").x(function(d) {\r\n");
      out.write("\t\t\treturn x(d.Timestamp);\r\n");
      out.write("\t\t}).y(function(d) {\r\n");
      out.write("\t\t\treturn y(d.qValue);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar svg = d3.select(\"body\").append(\"svg\").attr(\"width\",\r\n");
      out.write("\t\t\t\twidth + margin.left + margin.right).attr(\"height\",\r\n");
      out.write("\t\t\t\theight + margin.top + margin.bottom).append(\"g\").attr(\r\n");
      out.write("\t\t\t\t\"transform\",\r\n");
      out.write("\t\t\t\t\"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n");
      out.write("\r\n");
      out.write("\t\tsvg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\",\r\n");
      out.write("\t\t\t\t\"translate(0,\" + height + \")\").append(\"text\").attr(\"x\", width)\r\n");
      out.write("\t\t\t\t.style(\"text-anchor\", \"end\").text(\"Time\");\r\n");
      out.write("\r\n");
      out.write("\t\tsvg.append(\"g\").attr(\"class\", \"y axis\").append(\"text\").attr(\r\n");
      out.write("\t\t\t\t\"transform\", \"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \".71em\")\r\n");
      out.write("\t\t\t\t.style(\"text-anchor\", \"end\").text(\"Bandwidth in KBps\");\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tupdate(dataset1);\r\n");
      out.write("\r\n");
      out.write("\t\t/* var transitionInterval = setInterval(function () {\r\n");
      out.write("\t\tupdate(dataset2);\r\n");
      out.write("\t\t}, 1000);  */\r\n");
      out.write("\r\n");
      out.write("\t\tfunction update(dataset) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tbisectDate = d3.bisector(function(d) {\r\n");
      out.write("\t\t\t\treturn d.Timestamp;\r\n");
      out.write("\t\t\t}).left\r\n");
      out.write("\t\t\tcolor.domain(d3.keys(dataset[0]).filter(function(key) {\r\n");
      out.write("\t\t\t\treturn key !== \"Timestamp\";\r\n");
      out.write("\t\t\t}));\r\n");
      out.write("\r\n");
      out.write("\t\t\tconsole.log(d3.keys(dataset[0]));\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar efteValues = color.domain().map(function(name) {\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\tname : name,\r\n");
      out.write("\t\t\t\t\tvalues : dataset.map(function(d) {\r\n");
      out.write("\t\t\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\t\tTimestamp : d.Timestamp,\r\n");
      out.write("\t\t\t\t\t\t\tqValue : +d[name]\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tconsole.log(efteValues[0]);\r\n");
      out.write("\r\n");
      out.write("\t\t\tx.domain(dataset.map(function(d) {\r\n");
      out.write("\t\t\t\treturn d.Timestamp;\r\n");
      out.write("\t\t\t}));\r\n");
      out.write("\r\n");
      out.write("\t\t\t/*  y.domain([\r\n");
      out.write("\t\t\t d3.min(efteValues, function (c) {\r\n");
      out.write("\t\t\t     return d3.min(c.values, function (v) {\r\n");
      out.write("\t\t\t         return v.qValue;\r\n");
      out.write("\t\t\t     });\r\n");
      out.write("\t\t\t }),\r\n");
      out.write("\t\t\t d3.max(efteValues, function (c) {\r\n");
      out.write("\t\t\t     return d3.max(c.values, function (v) {\r\n");
      out.write("\t\t\t         return v.qValue;\r\n");
      out.write("\t\t\t     });\r\n");
      out.write("\t\t\t })]);  */\r\n");
      out.write("\r\n");
      out.write("\t\t\ty.domain([ 0, 2048 ]);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// update axes\r\n");
      out.write("\t\t\td3.transition(svg).select('.y.axis').call(yAxis);\r\n");
      out.write("\r\n");
      out.write("\t\t\td3.transition(svg).select('.x.axis').call(xAxis);\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar city = svg.selectAll(\".city\").data(efteValues);\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar cityEnter = city.enter().append(\"g\").attr(\"class\", \"city\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tcityEnter.append(\"path\").attr(\"class\", \"line\").attr(\"d\",\r\n");
      out.write("\t\t\t\t\tfunction(d) {\r\n");
      out.write("\t\t\t\t\t\treturn line(d.values);\r\n");
      out.write("\t\t\t\t\t}).style(\"stroke\", function(d) {\r\n");
      out.write("\t\t\t\treturn color(d.name);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tcityEnter.append(\"text\").datum(function(d) {\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\tname : d.name,\r\n");
      out.write("\t\t\t\t\tvalue : d.values[d.values.length - 1]\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t}).attr(\r\n");
      out.write("\t\t\t\t\t\"transform\",\r\n");
      out.write("\t\t\t\t\tfunction(d) {\r\n");
      out.write("\t\t\t\t\t\treturn \"translate(\" + x(d.value.Timestamp) + \",\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ y(d.value.qValue) + \")\";\r\n");
      out.write("\t\t\t\t\t}).attr(\"x\", -100).attr(\"dy\", -3).text(function(d) {\r\n");
      out.write("\t\t\t\treturn d.name;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t// transition by selecting 'city'...\r\n");
      out.write("\t\t\tcityUpdate = d3.transition(city);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// ... and each path within\r\n");
      out.write("\t\t\tcityUpdate.select('path').transition().duration(600).attr(\"d\",\r\n");
      out.write("\t\t\t\t\tfunction(d) {\r\n");
      out.write("\t\t\t\t\t\treturn line(d.values);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tcity.exit().remove();\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body onload=\"sendInfo();\">\r\n");
      out.write("\r\n");
      out.write("\t");

		response.setIntHeader("Refresh", 6);
	
      out.write("\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
